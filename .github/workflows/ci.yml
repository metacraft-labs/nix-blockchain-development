name: CI

on:
  workflow_dispatch:
  merge_group:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-22.11
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: accept-flake-config = true

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v3

      - uses: cachix/cachix-action@v14
        with:
          name: mcl-blockchain-packages
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - id: generate-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          nix develop .#ci -c just generate-matrix
      - name: Archive matrix
        uses: actions/upload-artifact@v4
        with:
          name: matrix
          path: matrix.txt
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      comment: ${{ steps.generate-matrix.outputs.comment }}

  build:
    needs: generate-matrix
    if: needs.generate-matrix.outputs.matrix != '{}'

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.generate-matrix.outputs.matrix)}}

    name: ${{ matrix.package }} | ${{ matrix.system }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allowedToFail }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          extra_nix_config: accept-flake-config = true

      - uses: cachix/cachix-action@v14
        with:
          name: mcl-blockchain-packages
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build ${{ matrix.package }}
        run: nix build -L --json --no-link '.#packages.${{ matrix.attrPath }}'

  results:
    runs-on: ubuntu-latest
    name: Final Results
    needs: [build, generate-matrix]
    steps:
      - run: exit 1
        if: >-
          ${{ fromJSON(needs.generate-matrix.outputs.matrix).include.length > 0 &&
            (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
      - run: exit 0
        if: ${{fromJSON(needs.generate-matrix.outputs.matrix).include.length == 0}}
