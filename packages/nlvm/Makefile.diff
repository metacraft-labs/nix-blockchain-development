diff --git a/Makefile b/Makefile
index 29d8929..57f43f3 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-NIMC=Nim/bin/nim
+NIMC=nim
 
 NLVMC=nlvm/nlvm
 NLVMR=nlvm/nlvmr
@@ -19,32 +19,17 @@ LLVM_DIR=llvm-$(LLVM_MAJ).$(LLVM_MIN).$(LLVM_PAT).src
 
 ifdef STATIC_LLVM
 	NLVMCFLAGS=-d:staticLLVM --dynliboverrideall
-	LLVM_DEP=ext/$(LLVM_DIR)/sta/bin/llvm-config
-	export PATH := $(PWD)/ext/$(LLVM_DIR)/sta/bin:$(PATH)
 else
-	LLVM_DEP=ext/$(LLVM_DIR)/sha/lib/libLLVM-$(LLVM_MAJ).so
 	NLVMCFLAGS?=
 endif
 
 .PHONY: all
 all: $(NLVMC)
 
-Nim/koch:
-	cd Nim ;\
-	[ -d csources_v1 ] || git clone -q --depth 1 -b master https://github.com/nim-lang/csources_v1.git ;\
-	cd csources_v1 ;\
-	git pull ;\
-	make -f makefile -j4
-	cd Nim ; bin/nim c koch
-
-$(NIMC): Nim/koch Nim/compiler/*.nim
-	cd Nim && ./koch boot -d:release
-
-$(NLVMC): $(LLVM_DEP) $(NIMC) Nim/compiler/*.nim  nlvm/*.nim llvm/*.nim nlvm-lib/*.nim
-	cd nlvm && time ../$(NIMC) $(NIMFLAGS) $(NLVMCFLAGS) c nlvm
-
-$(NLVMR): $(LLVM_DEP) $(NIMC) Nim/compiler/*.nim  nlvm/*.nim llvm/*.nim nlvm-lib/*.nim
-	cd nlvm && time ../$(NIMC) $(NIMFLAGS) -d:release $(NLVMCFLAGS) -o:nlvmr c nlvm
+$(NLVMC): nlvm/*.nim llvm/*.nim nlvm-lib/*.nim
+	cd nlvm && time $(NIMC) $(NIMFLAGS) $(NLVMCFLAGS) c nlvm
+$(NLVMR): nlvm/*.nim llvm/*.nim nlvm-lib/*.nim
+	cd nlvm && time $(NIMC) $(NIMFLAGS) -d:release $(NLVMCFLAGS) -o:nlvmr c nlvm
 
 nlvm/nlvm.ll: $(NLVMC) nlvm/*.nim llvm/*.nim nlvm-lib/*.nim
 	cd nlvm && time ./nlvm $(NLVMFLAGS) -o:nlvm.ll $(NLVMCFLAGS) -c c nlvm
@@ -62,62 +47,47 @@ nlvm/nlvm.self.ll: nlvm/nlvm.self
 compare: nlvm/nlvm.self.ll nlvm/nlvm.ll
 	diff -u nlvm/nlvm.self.ll nlvm/nlvm.ll
 
-Nim/testament/testament: $(NIMC) Nim/testament/*.nim
-	$(NIMC) -d:release c Nim/testament/testament
-
 .PHONY: run-testament
-run-testament: $(NLVMR) Nim/testament/testament
-	cd Nim; time testament/testament --megatest:off --targets:c "--nim:../nlvm/nlvmr" --skipFrom:../skipped-tests.txt all
+run-testament: $(NLVMR)
+	time testament --megatest:off --targets:c "--nim:../nlvm/nlvmr" --skipFrom:../skipped-tests.txt all
 
-run-testament-noskip: $(NLVMR) Nim/testament/testament
-	-cd Nim; time testament/testament --megatest:off --targets:c "--nim:../nlvm/nlvmr" all
+run-testament-noskip: $(NLVMR)
+	time testament --megatest:off --targets:c "--nim:../nlvm/nlvmr" all
 
 .PHONY: test
 test: run-testament stats
-	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' Nim/testresults/*json
+	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' testresults/*json
 
 update-skipped: run-testament-noskip stats
-	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' Nim/testresults/*json
+	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' testresults/*json
 	# Output suitable for sticking into skipped-tests.txt
-	-jq -r -s '([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | .[].name' Nim/testresults/*json | sort | uniq > skipped-tests.txt
+	-jq -r -s '([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | .[].name' testresults/*json | sort | uniq > skipped-tests.txt
 
 .PHONY: badeggs.json
 badeggs.json:
-	-jq -s '[.[][]|select(.result != "reSuccess" and .result != "reDisabled")]' Nim/testresults/*.json > badeggs.json
+	-jq -s '[.[][]|select(.result != "reSuccess" and .result != "reDisabled")]' testresults/*.json > badeggs.json
 
 .PHONY: stats
 stats: badeggs.json
-	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' Nim/testresults/*json
+	-jq -s '{bad: ([.[][]|select(.result != "reSuccess" and .result != "reDisabled")]) | length, ok: ([.[][]|select(.result == "reSuccess")]|length)}' testresults/*json
 	-jq 'group_by(.category)|.[]|((unique_by(.category)|.[].category) + " " + (length| tostring))' badeggs.json
 
 .PHONY: t2
 t2:
-	cp -r Nim/testresults tr2
+	cp -r testresults tr2
 
 .PHONY: self
 self: nlvm/nlvm.self
 
 .PHONY: clean
 clean:
-	rm -rf $(NLVMC) $(NLVMR) nlvm/nlvm.ll nlvm/nlvm.self.ll nlvm/nlvm.self Nim/testresults/
-
-ext/$(LLVM_DIR)/sha/lib/libLLVM-$(LLVM_MAJ).so:
-	sh ./make-llvm.sh $(LLVM_MAJ) $(LLVM_MIN) $(LLVM_PAT) sha \
-		-DLLVM_BUILD_LLVM_DYLIB=1 \
-		-DLLVM_LINK_LLVM_DYLIB=1 \
-		-DLLVM_ENABLE_ASSERTIONS=1 \
-		-DLLVM_INCLUDE_TESTS=Off \
-		-DLLVM_INCLUDE_BENCHMARKS=Off \
-		-DCMAKE_BUILD_TYPE=RelWithDebInfo
-
-ext/$(LLVM_DIR)/sta/bin/llvm-config:
-	sh ./dl-llvm.sh $(LLVM_MAJ) $(LLVM_MIN) $(LLVM_PAT) sta
+	rm -rf $(NLVMC) $(NLVMR) nlvm/nlvm.ll nlvm/nlvm.self.ll nlvm/nlvm.self testresults/
 
 .PHONY: prepare-llvm
-prepare-llvm: $(LLVM_DEP)
+prepare-llvm:
 
 .PHONY: prepare-nim
-prepare-nim: $(NIMC)
+prepare-nim:
 
 .PHONY: docker
 docker:
